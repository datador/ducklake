services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 2s
      timeout: 2s
      retries: 30

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9000/minio/health/ready || exit 1"]
      interval: 2s
      timeout: 2s
      retries: 30

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      DL_PG_CONN: ${DL_PG_CONN}
      DL_STORAGE: ${DL_STORAGE}
      DL_DATA_PATH: ${DL_DATA_PATH}
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      S3_REGION: ${DL_S3_REGION}
      S3_ENDPOINT: ${DL_S3_ENDPOINT}
      S3_URL_STYLE: ${S3_URL_STYLE}
      S3_USE_SSL: ${S3_USE_SSL}
      DL_S3_BUCKET: ${DL_S3_BUCKET}
      DL_S3_PREFIX: ${DL_S3_PREFIX}
      DUCKLAKE_NAME: ${DUCKLAKE_NAME}
    volumes:
      - ./data:/app/data
    working_dir: /app
    command: ["python","app.py"]

volumes:
  pgdata:
  minio_data: